# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-package: 'jdk'
        java-version: '11'
        server-id: alex9849
        server-username: NEXUS_USERNAME
        server-password: NEXUS_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_PGP_SECRET_KEY }}
        gpg-passphrase: MAVEN_PGP_PASSPHRASE
    - name: Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Set version
      run: |
        mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
        mvn --no-transfer-progress versions:commit
    - name: Log Settings.xml
      run: cat ~/.m2/settings.xml
    - name: Publish to Maven Central Repository
      env:
        MAVEN_PGP_PASSPHRASE: ${{ secrets.MAVEN_PGP_PASSPHRASE }}
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_TOKEN }}
      run: |
        mvn --no-transfer-progress org.apache.maven.plugins:maven-help-plugin:3.1.0:effective-settings
        mvn --no-transfer-progress --batch-mode clean deploy -P release
